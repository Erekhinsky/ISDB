CREATE TABLE incident(
	id serial PRIMARY KEY,
	event_time TIMESTAMP NOT NULL,
	place TEXT,
	event_type varchar(200) NOT NULL, 
	description TEXT NOT NULL,
	access_lvl INTEGER NOT NULL,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create type legality as enum ('законная', 'незаконная', 'предосудительная');

create table activity(
	id serial primary key,
	activity_type varchar(200) not null, 
	cathegory legality not null,
	description text not null
);

create type person_status as enum ('заключенный', 'в розыске', 'подозреваемый', 'член окружения', 'добропорядочный гражданин');

create type sex as enum ('м', 'ж');

create table observed_person(
	id serial primary key,
	cathegory person_status not null, 
	person_name varchar(200),
	person_alias varchar(200),
	person_sex sex,
	citizenship varchar(100),
	passport varchar(20),
	address text,
	birth_date timestamp,
	person_location text,
	access_lvl integer not null,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create type completeness as enum ('открыто', 'закрыто');

create table criminal_case(
	id serial primary key,
	case_name varchar(100),
	description text,
	criminal_case_status completeness not null,
	access_lvl integer not null,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create type evidence_types as enum ('показания подозреваемого', 'показания обвиняемого', 'показания потерпевшего', 'показания свидетеля', 'заключение эксперта', 'вещественные доказательства', 'протоколы следственных действий', 'протоколы судебных заседаний', 'иные документы');

create table evidence(
	id serial primary key,
	case_id integer references criminal_case(id) on delete restrict,
	evidence_type evidence_types not null,
	description text,
	evidence_storage text,
	access_lvl integer not null,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create table organization(
	id serial primary key,
	leader_id integer references observed_person(id) on delete restrict,
	organization_name varchar(200) not null,
	address text,
	access_lvl integer not null,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create table employee_position(
	id serial primary key,
	position_name varchar(200) unique not null,
	responsibilities text,
	qualification text,
	access_lvl integer not null,
	check(access_lvl >= 0 and access_lvl <= 4)
);

create table department(
	id serial primary key,
	abbrev varchar(5) unique not null,
	department_name varchar(100) not null,
	description text
);

create type employee_status as enum ('актуальный', 'бывший');

create table employee(
	id serial primary key,
	position_id integer references employee_position(id) on delete restrict,
	department_id integer references department(id) on delete restrict,
	employee_name varchar(100) not null,
	passport varchar(20) unique not null,
	current_status employee_status not null
);

create table article(
	id serial primary key,
	department_id integer references department(id) on delete restrict,
	code varchar(200) not null,
	article_number integer not null,
	description text not null,
	unique(code, article_number)
);


create table organization_activity(
	organization_id integer references organization(id) on delete restrict,
	activity_id integer references activity(id) on delete restrict
);

create table person_activity(
	person_id integer references observed_person(id) on delete restrict,
	activity_id integer references activity(id) on delete restrict
);

create table person_case_participant(
	person_id integer references observed_person(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table person_case_witness(
	person_id integer references observed_person(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table organization_case_participant(
	organization_id integer references organization(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table case_related_incident(
	incident_id integer references incident(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table court_charges(
	article_id integer references article(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table responsible_employee(
	employee_id integer references employee(id) on delete restrict,
	case_id integer references criminal_case(id) on delete restrict
);

create table membership(
	organization_id integer references organization(id) on delete restrict,
	person_id integer references observed_person(id) on delete restrict,
	member_role varchar(200)
);